openapi: 3.0.1
info:
  title: YLEM Mobile Backend API
  version: "1.0"
servers:
- url: /
paths:
  /auth:
    post:
      tags:
      - Auth
      summary: Authorize a user and generate an auth token.
      description: Authorize a user.
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/AuthRequest'
        required: false
      responses:
        200:
          description: User authorized successfully.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AuthResponse'
        403:
          description: Unauthorized.
          content: {}
        500:
          description: Backend error.
          content: {}
  /devices:
    post:
      tags:
      - Devices
      summary: Creates a new device instance.
      description: Create a new device instance.
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DeviceInstance'
        required: false
      responses:
        201:
          description: Device created.
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/DeviceInstanceResponse'
        403:
          description: Unauthorized.
          content: {}
        500:
          description: Backend error.
          content: {}
      security:
      - Bearer: []
      
  /devices/{deviceId}/device-usage-metrics:
    post:
      tags:
      - Devices
      summary: Submits expected usage pattern or performance target for device.
      description: Submit expected usage pattern for device. e.g. a clothes iron may be used from 7pm - 8pm at 1.5kW. A water heater could be expected to heat water to 80 degrees by 6am. These can both be considered inputs for this API endpoint. The timegrid array is generalized to accept objects with parameters as required by the particular device's function.
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DeviceUsageInformation'
        required: false
      responses:
        201:
          description: Device usage pattern submitted.
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/DeviceUsageResponse'
        403:
          description: Unauthorized.
          content: {}
        500:
          description: Backend error.
          content: {}
      security:
      - Bearer: []
      
      

  /users/{userId}/balance:
    get:
      tags:
      - FIAT
      summary: Retrieve FIAT token balance for user.
      description: Retrieve FIAT token balance for user.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: User FIAT balance.
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/FiatBalanceResponse'
        403:
          description: Unauthorized.
          content: {}
        500:
          description: Backend error.
          content: {}
      security:
      - Bearer: [] 

components:
  schemas:
    AuthRequest:
      type: object
      properties:
        username:
          type: string
          description: Username.
        password:
          type: string
          description: Password.
    AuthResponse:
      type: object
      properties:
        authToken:
          type: string
          description: Authorization Token.
    DeviceInstance:
      type: object
      properties:
        deviceTypeId:
          type: string
          description: ID for the device type.
        extraInformation:
          type: object
          description: Extra information related to the device, e.g. wattage (if device is not already present in the database)
    DeviceInstanceResponse:
      type: object
      properties:
        deviceInstanceId:
          type: string
          description: Device ID.
        deviceTypeId:
          type: string
          description: Device type ID.
    DeviceUsageInformation:
      type: object
      properties:
        timegrid:
          type: array
          items:
            type: object
            properties:
              startTime: 
                type: string
                description: Start time for device usage.
              endTime:
                type: string
                description: End time for device usage.
              powerLevel: 
                type: integer
                description: Power in kW that the device is going to be used at.
    DeviceUsageResponse:
      type: object
      properties:
        deviceUsageId:
          type: string
          description: ID of stored device usage information.
        timegrid:
          type: array
          items:
            type: object
            properties:
              x: 
                type: string
                description: X parameter for device usage. For example, for a clothes iron, this may be a start time, while for a water heater it could be the time that water is expected to be heated by.
              y:
                type: string
                description: Y parameter for device usage. For example, for a clothes iron this may be an end time, while for a water heater it could be the temperature the water is expected to be heated to. 
              z: 
                type: string
                description: Z parameter for device usage. For example, for a clothes iron this be the power level. 
    FiatBalanceResponse:
      type: object
      properties:
        balance: 
          type: number
          description: FIAT balance amount.
          
        
    
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
